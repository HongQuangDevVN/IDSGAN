{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Make Dataset Final","provenance":[],"collapsed_sections":[],"toc_visible":true,"mount_file_id":"1igRsqMNjNr34Q9ciN9Y790N4yi1t0o5f","authorship_tag":"ABX9TyMvoqR+3XC+PhGMC0CfHH0q"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"HfVbgm_IdnMH","colab_type":"text"},"source":["# **0.  Khai báo đường dẫn**"]},{"cell_type":"code","metadata":{"id":"uW-RHzMwdsG5","colab_type":"code","colab":{}},"source":["# Dataset Path\n","dataset_path = \"/content/drive/My Drive/Study/KLTN/Dataset/\"\n","\n","# Dataset preprocessed including attack-type labels\n","trainsets_path = dataset_path + \"NSL-KDD Processed/Separate by Category/Encoded&Normalized/Trainset Separate to 2 Parts/\"\n","testsets_path = dataset_path + \"NSL-KDD Processed/Separate by Category/Encoded&Normalized/Testset/\"\n","\n","# Dataset Final Path\n","final_dataset_path = dataset_path + \"NSL-KDD Processed/Final - For Using/\""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DZkqASdBS-QA","colab_type":"text"},"source":["#**1. Chuẩn bị**"]},{"cell_type":"markdown","metadata":{"id":"m27n3nFSTSv2","colab_type":"text"},"source":["##**1.1 Import thư viện**"]},{"cell_type":"code","metadata":{"id":"YIQ708lZS2lF","colab_type":"code","colab":{}},"source":["# Import Lib\n","import pandas as pd\n","import numpy as np\n","from sklearn.utils import shuffle"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"k72O0MHLFiYD","colab_type":"text"},"source":["##**1.2. Load dataset**\n","Load từng phần của mỗi loại dữ liệu, từ dữ liệu đã chia mỗi category thành 2 phần bằng nhau."]},{"cell_type":"code","metadata":{"id":"uC-wFVSIFo7G","colab_type":"code","colab":{}},"source":["# define categories\n","train_categories = ['Normal', 'DOS', 'U2R', 'R2L']\n","test_categories = ['Normal', 'DOS', 'U2R_AND_R2L']\n","\n","# Load dataset\n","# Train\n","trainsets_1 = {category: pd.read_csv(trainsets_path + category + '_1.csv') for category in train_categories}\n","trainsets_2 = {category: pd.read_csv(trainsets_path + category + '_2.csv') for category in train_categories}\n","# Test\n","testsets = {category: pd.read_csv(testsets_path + category + '.csv') for category in test_categories}"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"v72n0Gu0EPHr","colab_type":"text"},"source":["#**2. Tạo bộ dữ liệu cuối từ các bộ dữ liệu đã được chia**\n","##**Train**\n","> - **IDS** = Normal_1 + Malicious_1 (label = Attack Category)\n","> - **GAN**:\n"," - **GAN-D**: Normal_2\n"," - **GAN-G**: Malicious_2 (label = Attack Category)\n","\n","##**Test**\n","> Đổi label của KDDTest+ thành Attack Category\n"]},{"cell_type":"markdown","metadata":{"id":"wQ9m3omh3ONM","colab_type":"text"},"source":["##**2.1. Train**"]},{"cell_type":"code","metadata":{"id":"NdOKt3o43QiO","colab_type":"code","colab":{}},"source":["# Encode label to Attack Category\n","for category in train_categories:\n","    if category == 'U2R' or category == 'R2L':\n","        trainsets_1[category]['class'] = 'U2R_AND_R2L'\n","        trainsets_2[category]['class'] = 'U2R_AND_R2L'\n","    else:\n","        trainsets_1[category]['class'] = category\n","        trainsets_2[category]['class'] = category"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_yuFHfbzkJfP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":323},"executionInfo":{"status":"ok","timestamp":1592320224954,"user_tz":-420,"elapsed":6028,"user":{"displayName":"Tien LE KHAC","photoUrl":"","userId":"18298916241916904857"}},"outputId":"45a8d6e8-fa7a-42f7-f76f-e8404e9377cc"},"source":["# Make Trainsets\n","# Make IDS Trainset\n","IDS_Trainset = shuffle(pd.concat(trainsets_1.values(), ignore_index=True)).reset_index(drop=True)\n","\n","# Make GAN Trainset\n","# Discriminator Trainset\n","Discriminator_Trainset = trainsets_2['Normal']\n","# Generator Trainset\n","Generator_Trainset = shuffle(pd.concat([trainsets_2['DOS'], trainsets_2['U2R'], trainsets_2['R2L']], ignore_index=True)).reset_index(drop=True)\n","\n","\n","# Statistic & Save\n","final_trainsets = {'IDS': IDS_Trainset, 'GAN-D': Discriminator_Trainset, 'GAN-G': Generator_Trainset}\n","for dataset_name, dataset in final_trainsets.items():\n","    print(f\"{10*'*'}{dataset_name}_TRAINSET{10*'*'}\")\n","    print(f\" Shape: {dataset.shape}\")\n","    for cat in test_categories:\n","        print(f\"  - Num of {cat}:{len(dataset[dataset['class'] == cat])}\")\n","    dataset_save_path = final_dataset_path+'Trainset/'+dataset_name+'.csv'\n","    dataset.to_csv(dataset_save_path, index=False)\n","    print(f\"Saved Sucessfully at: {dataset_save_path}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["**********IDS_TRAINSET**********\n"," Shape: (57157, 42)\n","  - Num of Normal:33671\n","  - Num of DOS:22963\n","  - Num of U2R_AND_R2L:523\n","Saved Sucessfully at: /content/drive/My Drive/Study/KLTN/Dataset/NSL-KDD Processed/Final - For Using/Trainset/IDS.csv\n","**********GAN-D_TRAINSET**********\n"," Shape: (33672, 42)\n","  - Num of Normal:33672\n","  - Num of DOS:0\n","  - Num of U2R_AND_R2L:0\n","Saved Sucessfully at: /content/drive/My Drive/Study/KLTN/Dataset/NSL-KDD Processed/Final - For Using/Trainset/GAN-D.csv\n","**********GAN-G_TRAINSET**********\n"," Shape: (23488, 42)\n","  - Num of Normal:0\n","  - Num of DOS:22964\n","  - Num of U2R_AND_R2L:524\n","Saved Sucessfully at: /content/drive/My Drive/Study/KLTN/Dataset/NSL-KDD Processed/Final - For Using/Trainset/GAN-G.csv\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"GlKHwQSZ3S_f","colab_type":"text"},"source":["##**2.2. Test**"]},{"cell_type":"code","metadata":{"id":"LHT5BqIMr_VW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":119},"executionInfo":{"status":"ok","timestamp":1592320845465,"user_tz":-420,"elapsed":2387,"user":{"displayName":"Tien LE KHAC","photoUrl":"","userId":"18298916241916904857"}},"outputId":"b4cea836-57ad-4b07-b442-04ef15783788"},"source":["# Encode label to Attack Category\n","for category in test_categories:\n","    testsets[category]['class'] = category\n","\n","\n","# Make testset\n","final_testset = shuffle(pd.concat(testsets.values(), ignore_index=True)).reset_index(drop=True)\n","\n","# Statistic & Save\n","print(f\"{10*'*'}TESTSET{10*'*'}\")\n","print(f\" Shape: {final_testset.shape}\")\n","for cat in test_categories:\n","    print(f\"  - Num of {cat}:{len(final_testset[final_testset['class'] == cat])}\")\n","dataset_save_path = final_dataset_path+'Testset/'+'KDDTest+.csv'\n","final_testset.to_csv(dataset_save_path, index=False)\n","print(f\"Saved Sucessfully at: {dataset_save_path}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["**********TESTSET**********\n"," Shape: (20123, 42)\n","  - Num of Normal:9711\n","  - Num of DOS:7460\n","  - Num of U2R_AND_R2L:2952\n","Saved Sucessfully at: /content/drive/My Drive/Study/KLTN/Dataset/NSL-KDD Processed/Final - For Using/Testset/KDDTest+.csv\n"],"name":"stdout"}]}]}