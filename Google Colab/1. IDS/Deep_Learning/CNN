{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CNN","provenance":[{"file_id":"1lXJCpzo6EaMXbdbm0DWKgckhdo8QJ2WD","timestamp":1592964124705}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"EK9wkO-Qke1m","colab_type":"code","colab":{}},"source":["# PATH\n","# Dataset\n","dataset_path = '/content/drive/My Drive/Study/KLTN/Dataset/NSL-KDD Processed/Final - For Using/'\n","trainset_path = dataset_path + 'Trainset/' + 'IDS.csv'\n","testset_path = dataset_path + 'Testset/' + 'KDDTest+.csv'\n","\n","# Save Model Path\n","save_model_path = '/content/drive/My Drive/Study/KLTN/Saved Model/IDSModel/'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nN1nZ3FHS4iX","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":33},"executionInfo":{"status":"ok","timestamp":1594947793031,"user_tz":-420,"elapsed":1016,"user":{"displayName":"Tien LE KHAC","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhATILfEwLuvrRlBGPMrmY7nclZNsxGKzoqqHB_Cg=s64","userId":"18298916241916904857"}},"outputId":"ba25de1b-6018-4104-e1d9-5247da0d415a"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"J7xxmAyY_7BN","colab_type":"code","colab":{}},"source":["import keras\n","import numpy as np\n","import pandas as pd\n","from datetime import date\n","import os\n","from keras import backend as K\n","from keras.layers import Dense, Activation, Flatten, Conv1D, Dropout\n","from keras.layers.normalization import BatchNormalization\n","from keras.models import Sequential, load_model\n","from keras.callbacks import EarlyStopping\n","from sklearn.metrics import confusion_matrix\n","\n","def load_dataset_only(path, attack_category):\n","    if attack_category != 'DOS' and attack_category != 'U2R_AND_R2L':\n","      raise ValueError(\"Preprocess Data Fail: Invalid Attack Category\")\n","    df = pd.read_csv(path)\n","    df = df[df['class'].isin(['Normal', attack_category])]\n","    print(f\" - Amount of Normal record: {len(df[df['class'] == 'Normal'])}\")\n","    print(f\" - Amount of {attack_category} record: {len(df[df['class'] == attack_category])}\")\n","    X = np.asarray(df[df.columns[df.columns != \"class\"]])\n","    Y = np.asarray(df['class'].map(lambda x : 0 if x == \"Normal\" else 1))\n","    return X, Y\n","def load_dataset(path, attack_category):\n","    X, Y = load_dataset_only(path, attack_category)\n","    num_classes = 2\n","    img_rows, img_cols = 1, X.shape[1]\n","    X = X.reshape(X.shape[0], img_cols, img_rows)\n","    Y = keras.utils.to_categorical(np.asarray(Y), num_classes)\n","    return X, Y\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uJKmEl03kUNj","colab_type":"text"},"source":["#**1. Define Model**"]},{"cell_type":"code","metadata":{"id":"xKCcIzhhkW3M","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":342},"executionInfo":{"status":"ok","timestamp":1594947795597,"user_tz":-420,"elapsed":3550,"user":{"displayName":"Tien LE KHAC","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhATILfEwLuvrRlBGPMrmY7nclZNsxGKzoqqHB_Cg=s64","userId":"18298916241916904857"}},"outputId":"2d6c6f1b-f272-4287-c64d-973acb8f645c"},"source":["img_rows, img_cols = 1, 41\n","num_classes = 2\n","\n","# Create Model\n","model = Sequential()\n","model.add(Conv1D(128, (4), input_shape=(img_cols, img_rows), activation='tanh'))\n","model.add(Flatten())\n","model.add(Dropout(0.4))\n","model.add(Dense(128, activation='relu'))\n","model.add(BatchNormalization())\n","model.add(Dense(num_classes, activation='softmax'))\n","\n","opt = keras.optimizers.Adam(learning_rate=0.001)\n","\n","model.compile(optimizer=opt,\n","              loss='binary_crossentropy',\n","              metrics= ['accuracy']\n","            )\n","model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv1d_1 (Conv1D)            (None, 38, 128)           640       \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 4864)              0         \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 4864)              0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 128)               622720    \n","_________________________________________________________________\n","batch_normalization_1 (Batch (None, 128)               512       \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 2)                 258       \n","=================================================================\n","Total params: 624,130\n","Trainable params: 623,874\n","Non-trainable params: 256\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"tSizIrGmm0tY","colab_type":"text"},"source":["#**Train**"]},{"cell_type":"code","metadata":{"id":"AOdsSiIgQMPH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":667},"executionInfo":{"status":"ok","timestamp":1594948223283,"user_tz":-420,"elapsed":46622,"user":{"displayName":"Tien LE KHAC","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhATILfEwLuvrRlBGPMrmY7nclZNsxGKzoqqHB_Cg=s64","userId":"18298916241916904857"}},"outputId":"d76bda9d-437b-4ba4-86d8-5ad91ac2eab0"},"source":["# Train\n","today = str(date.today())\n","es = EarlyStopping(monitor='val_loss', mode='min', verbose=1)\n","batch_size = 128\n","epochs = 10\n","\n","for attack_category in ['DOS', 'U2R_AND_R2L']:\n","    print(f\"{100*'-'}\\nModel: CNN, Attack Category: {attack_category}\")\n","    # Load data\n","    print(\"Trainset\")\n","    x_train, y_train = load_dataset(trainset_path,attack_category)\n","    print(\"Testset\")\n","    x_test, y_test = load_dataset(testset_path,attack_category)\n","    # Train Model\n","    model.fit(x_train,\n","            y_train,\n","            batch_size=batch_size,\n","            epochs=epochs,\n","            verbose=1,\n","            validation_split=0.25,\n","            callbacks=[es])\n","\n","    result = model.evaluate(x_test, y_test, batch_size=batch_size)\n","    print(f\"Loss: {result[0]:.2f} - Acc: {result[1]*100:.2f}%\")\n","    model_saved_name = str(f\"created_date_{today}_CNN.h5\")\n","    model_saved_folder = str(f\"{save_model_path}{attack_category}/Deep_Learning/Keras/\")\n","    if not os.path.exists(model_saved_folder):\n","                os.makedirs(model_saved_folder)\n","    model.save(f\"{model_saved_folder}{model_saved_name}\")\n","    print(f\"Saved model to disk\\n Folder: {model_saved_folder}\\n Name: {model_saved_name}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["----------------------------------------------------------------------------------------------------\n","Model: CNN, Attack Category: DOS\n","Trainset\n"," - Amount of Normal record: 33671\n"," - Amount of DOS record: 22963\n","Testset\n"," - Amount of Normal record: 9711\n"," - Amount of DOS record: 7460\n","Train on 42475 samples, validate on 14159 samples\n","Epoch 1/10\n","42475/42475 [==============================] - 11s 268us/step - loss: 0.0107 - accuracy: 0.9962 - val_loss: 0.0204 - val_accuracy: 0.9948\n","Epoch 2/10\n","42475/42475 [==============================] - 11s 266us/step - loss: 0.0093 - accuracy: 0.9970 - val_loss: 0.0222 - val_accuracy: 0.9911\n","Epoch 00002: early stopping\n","17171/17171 [==============================] - 1s 54us/step\n","Loss: 0.47 - Acc: 91.37%\n","Saved model to disk\n"," Folder: /content/drive/My Drive/Study/KLTN/Saved Model/IDSModel/DOSDeep_Learning/Keras/\n"," Name: created_date_2020-07-17_CNN.h5\n","----------------------------------------------------------------------------------------------------\n","Model: CNN, Attack Category: U2R_AND_R2L\n","Trainset\n"," - Amount of Normal record: 33671\n"," - Amount of U2R_AND_R2L record: 523\n","Testset\n"," - Amount of Normal record: 9711\n"," - Amount of U2R_AND_R2L record: 2952\n","Train on 25645 samples, validate on 8549 samples\n","Epoch 1/10\n","25645/25645 [==============================] - 7s 271us/step - loss: 0.0630 - accuracy: 0.9794 - val_loss: 0.0362 - val_accuracy: 0.9855\n","Epoch 2/10\n","25645/25645 [==============================] - 7s 271us/step - loss: 0.0271 - accuracy: 0.9897 - val_loss: 0.0213 - val_accuracy: 0.9926\n","Epoch 3/10\n","25645/25645 [==============================] - 7s 267us/step - loss: 0.0243 - accuracy: 0.9904 - val_loss: 0.0224 - val_accuracy: 0.9895\n","Epoch 00003: early stopping\n","12663/12663 [==============================] - 1s 53us/step\n","Loss: 2.05 - Acc: 76.40%\n","Saved model to disk\n"," Folder: /content/drive/My Drive/Study/KLTN/Saved Model/IDSModel/U2R_AND_R2LDeep_Learning/Keras/\n"," Name: created_date_2020-07-17_CNN.h5\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"TxzZlstwWS3c","colab_type":"text"},"source":["Thư mục lưu sai, đã chỉnh lại code và move model về đúng thư mục.  \n","\"/content/drive/My Drive/Study/KLTN/Saved Model/IDSModel/***DOSDeep_Learning***/Keras/\"  \n","--> /content/drive/My Drive/Study/KLTN/Saved Model/IDSModel/***DOS/Deep_Learning***/Keras/"]},{"cell_type":"markdown","metadata":{"id":"hbRj_hvAuO08","colab_type":"text"},"source":["#**Calc DR**"]},{"cell_type":"code","metadata":{"id":"ydedQyLr1IM-","colab_type":"code","colab":{}},"source":["def create_batch(x, y, batch_size):\n","    a = list(range(len(x)))\n","    np.random.shuffle(a)\n","    x = x[a]\n","    y = y[a]\n","\n","    batch_x = [x[batch_size * i : (i+1)*batch_size,:].tolist() for i in range(len(x)//batch_size)]\n","    batch_y = [y[batch_size * i : (i+1)*batch_size].tolist() for i in range(len(x)//batch_size)]\n","    return np.array(batch_x), np.array(batch_y)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3XnDlpDauT4O","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":245},"executionInfo":{"status":"ok","timestamp":1594948971540,"user_tz":-420,"elapsed":6757,"user":{"displayName":"Tien LE KHAC","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhATILfEwLuvrRlBGPMrmY7nclZNsxGKzoqqHB_Cg=s64","userId":"18298916241916904857"}},"outputId":"457caca2-9e2a-481c-8e22-5bce568cc97a"},"source":["# Calc DR\n","print(f\"{100*'='}\\nCALCULATE DETECTION RATE\")\n","for attack_category in ['DOS', 'U2R_AND_R2L']:\n","    print(f\"{100*'-'}\\nModel: CNN, Attack Category: {attack_category}\")\n","    \n","    # Load Data\n","    print(\"Testset\")\n","    x_test, y_test = load_dataset_only(testset_path,attack_category)\n","    batch_x_test, batch_y_test = create_batch(x_test, y_test, batch_size = 128)\n","    \n","\n","    # Load Model\n","    model_saved_name = str(f\"created_date_{today}_CNN.h5\")\n","    ids_model_path = str(f\"{save_model_path}{attack_category}Deep_Learning/Keras/{model_saved_name}\")\n","    ids_model = load_model(ids_model_path)\n","    # ids_model.summary()\n","\n","    # Test & Calc DR\n","    drs = []\n","    for idx, data in enumerate(batch_x_test):\n","        true_labels = batch_y_test[idx]\n","        data = data.reshape(data.shape[0], 41, 1)\n","        ids_outputs = ids_model.predict(data)\n","        predict_labels = np.argmax((ids_outputs),axis = 1)\n","\n","        tn, fn, fp, tp = confusion_matrix(true_labels,predict_labels).ravel()\n","\n","        drs.append(tp/(tp + fp))\n","    dr = np.mean(drs)*100\n","    print(f\" -> {attack_category} - DR: {dr:.2f}%\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["====================================================================================================\n","CALCULATE DETECTION RATE\n","----------------------------------------------------------------------------------------------------\n","Model: CNN, Attack Category: DOS\n","Testset\n"," - Amount of Normal record: 9711\n"," - Amount of DOS record: 7460\n"," -> DOS - DR: 81.73%\n","----------------------------------------------------------------------------------------------------\n","Model: CNN, Attack Category: U2R_AND_R2L\n","Testset\n"," - Amount of Normal record: 9711\n"," - Amount of U2R_AND_R2L record: 2952\n"," -> U2R_AND_R2L - DR: 0.13%\n"],"name":"stdout"}]}]}